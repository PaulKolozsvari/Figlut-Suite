<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Figlut.Server.Toolkit.20</name>
    </assembly>
    <members>
        <member name="M:Figlut.Server.Toolkit.Data.DB.DatabaseTableColumn.#ctor(System.Data.DataRow)">
            <summary>
            
            </summary>
            <param name="schemaRow">The DataRow retrieved from a database schema containing information about this column.</param>
        </member>
        <member name="M:Figlut.Server.Toolkit.Data.DB.DatabaseTable.#ctor(System.Data.DataRow,System.String)">
            <summary>
            
            </summary>
            <param name="schemaRow">The DataRow retrieved from a database schema containing information about this column.</param>
        </member>
        <member name="T:Figlut.Server.Toolkit.Data.DB.SQLServer.SqlDatabaseTableColumn">
            <summary>
            http://msdn.microsoft.com/library/ms254969.aspx
            </summary>
        </member>
        <member name="T:Figlut.Server.Toolkit.Data.DB.SQLServer.SqlTypeConverter">
            <summary>
            http://msdn.microsoft.com/en-us/library/system.data.sqltypes.aspx
            </summary>
        </member>
        <member name="M:Figlut.Server.Toolkit.Data.EntityReader.GetPropertyNamesByType(System.Type,System.Collections.Generic.List{System.Type},System.Boolean)">
            <summary>
            Gets a the names of properties of the specified entity type whose types match are in the specified list of propertyTypes.
            </summary>
            <param name="entityType">The type of the property to reflect against.</param>
            <param name="propertyTypes">The types of which the properties of the entity should be.</param>
            <returns></returns>
        </member>
        <member name="T:Figlut.Server.Toolkit.Data.ORM.OrmAssembly">
            <summary>
            http://olondono.blogspot.com/2008/02/creating-code-at-runtime.html
            Collectible Assemblies for Dynamic Type Generation : http://msdn.microsoft.com/en-us/library/dd554932.aspx#restrictions
            </summary>
        </member>
        <member name="T:Figlut.Server.Toolkit.Data.ORM.OrmProperty">
            <summary>
            http://olondono.blogspot.com/2008/02/creating-code-at-runtime.html
            </summary>
        </member>
        <member name="T:Figlut.Server.Toolkit.Data.ORM.OrmType">
            <summary>
            http://olondono.blogspot.com/2008/02/creating-code-at-runtime.html
            </summary>
        </member>
        <member name="M:Figlut.Server.Toolkit.Data.DB.SQLServer.SqlDatabase.PopulateTablesFromSchema(System.Boolean,System.Data.Common.DbConnection,System.Boolean)">
            <summary>
            http://msdn.microsoft.com/library/ms254969.aspx
            http://www.devart.com/dotconnect/salesforce/docs/Metadata-GetSchema.html
            </summary>
            <param name="includeColumns"></param>
        </member>
        <member name="F:Figlut.Server.Toolkit.Data.DB.SQLQuery.ComparisonOperator.EQUALS">
            <summary>
            =
            </summary>
        </member>
        <member name="F:Figlut.Server.Toolkit.Data.DB.SQLQuery.ComparisonOperator.GREATER_THAN">
            <summary>
            >
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:Figlut.Server.Toolkit.Data.DB.SQLQuery.ComparisonOperator.LESS_THAN" -->
        <member name="F:Figlut.Server.Toolkit.Data.DB.SQLQuery.ComparisonOperator.GREATER_THAN_OR_EQUAL_TO">
            <summary>
            >=
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:Figlut.Server.Toolkit.Data.DB.SQLQuery.ComparisonOperator.LESS_THAN_OR_EQUAL_TO" -->
        <!-- Badly formed XML comment ignored for member "F:Figlut.Server.Toolkit.Data.DB.SQLQuery.ComparisonOperator.NOT_EQUAL_TO_ANGLE_BRACKETS" -->
        <member name="F:Figlut.Server.Toolkit.Data.DB.SQLQuery.ComparisonOperator.NOT_EQUAL_TO">
            <summary>
            !=
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:Figlut.Server.Toolkit.Data.DB.SQLQuery.ComparisonOperator.NOT_LESS_THAN" -->
        <member name="F:Figlut.Server.Toolkit.Data.DB.SQLQuery.ComparisonOperator.NOT_GREATER_THAN">
            <summary>
            !>
            </summary>
        </member>
        <member name="F:Figlut.Server.Toolkit.Data.DB.SQLQuery.ComparisonOperator.IS">
            <summary>
            IS
            </summary>
        </member>
        <member name="F:Figlut.Server.Toolkit.Data.DB.SQLQuery.ComparisonOperator.IS_NOT">
            <summary>
            IS NOT
            </summary>
        </member>
        <member name="T:Figlut.Server.Toolkit.Data.DB.SQLQuery.WhereClauseComparisonOperator">
            <summary>
            http://msdn.microsoft.com/en-us/library/ms173290(v=sql.90).aspx
            </summary>
        </member>
        <member name="T:Figlut.Server.Toolkit.Data.DB.SQLQuery.WhereClauseLogicalOperator">
            <summary>
            http://msdn.microsoft.com/en-us/library/ms173290(v=sql.90).aspx
            </summary>
        </member>
        <member name="T:Figlut.Server.Toolkit.Mmc.Forms.SettingsControl">
            <summary>
            Form container for a ListView control 
            </summary>
        </member>
        <member name="M:Figlut.Server.Toolkit.Mmc.Forms.SettingsControl.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Figlut.Server.Toolkit.Mmc.Forms.SettingsControl.Microsoft#ManagementConsole#IFormViewControl#Initialize(Microsoft.ManagementConsole.FormView)">
            <summary>
            Cache the associated Form View and add the actions
            </summary>
            <param name="parentSelectionFormView">Containing form</param>
                    
        </member>
        <member name="M:Figlut.Server.Toolkit.Mmc.Forms.SettingsControl.RefreshData">
            <summary>
            Populate the list with sample data
            </summary>
            <param name="users">array of user data to add to the list</param>
        </member>
        <member name="M:Figlut.Server.Toolkit.Mmc.Forms.SettingsControl.GetSelectedSetting">
            <summary>
            Build string of selected users
            </summary>
            <returns></returns>
        </member>
        <member name="M:Figlut.Server.Toolkit.Mmc.Forms.SettingsControl.lstvSettings_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Updates the FormView's selected data context when the user clicks on a setting.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Figlut.Server.Toolkit.Mmc.Forms.SettingsControl.lstvSettings_MouseClick(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handle mouseclick and use MMC to show context menu if necessary 
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:Figlut.Server.Toolkit.Mmc.Forms.SettingsControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Figlut.Server.Toolkit.Mmc.Forms.SettingsControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Figlut.Server.Toolkit.Mmc.Forms.SettingsControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Figlut.Server.Toolkit.Mmc.Forms.SettingsFormView">
            <summary>
            FormView to display Winforms controls
            </summary>
        </member>
        <member name="M:Figlut.Server.Toolkit.Mmc.Forms.SettingsFormView.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Figlut.Server.Toolkit.Mmc.Forms.SettingsFormView.OnInitialize(Microsoft.ManagementConsole.AsyncStatus)">
            <summary>
            Handle any setup necessary
            </summary>
            <param name="status">asynchronous status for updating the console</param>
        </member>
        <member name="M:Figlut.Server.Toolkit.Mmc.Forms.SettingsFormView.OnSelectionAction(Microsoft.ManagementConsole.Action,Microsoft.ManagementConsole.AsyncStatus)">
            <summary>
            Handle triggered action
            </summary>
            <param name="action">triggered action</param>
            <param name="status">asynchronous status to update console</param>
        </member>
        <member name="M:Figlut.Server.Toolkit.Mmc.Forms.SettingsFormView.OnAddPropertyPages(Microsoft.ManagementConsole.PropertyPageCollection)">
            <summary>
            OnAddPropertyPages is used to get the property pages to show. 
            (triggered by SelectionData.ShowPropertySheet)
            </summary>
            <param name="propertyPageCollection">property pages</param>
        </member>
        <member name="M:Figlut.Server.Toolkit.Mmc.SettingEditors.EditBoolSettingControl.RefreshData(System.Object)">
            <summary>
            Populate control values from the SelectionObject (set in UserListView.SelectionOnChanged) The node is the node being updated.
            This method sets the default values on the controls.
            </summary>
        </member>
        <member name="M:Figlut.Server.Toolkit.Mmc.SettingEditors.EditBoolSettingControl.CanApplyChanges">
            <summary>
            Check during UserProptertyPage.OnApply to ensure that changes can be Applied i.e. verify values entered from the user.
            </summary>
            <returns>returns true if changes are valid</returns>
        </member>
        <member name="M:Figlut.Server.Toolkit.Mmc.SettingEditors.EditBoolSettingControl.UpdateData(System.Object)">
            <summary>
            Update the node with the controls values.
            </summary>
            <param name="userNode">Node being updated by property page</param>
        </member>
        <member name="M:Figlut.Server.Toolkit.Mmc.SettingEditors.EditBoolSettingControl.chkValue_CheckedChanged(System.Object,System.EventArgs)">
            <summary>
            Notifies/Flags the PropertyPage that info has changed and that the PropertySheet can change the 
            buttons.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:Figlut.Server.Toolkit.Mmc.SettingEditors.EditBoolSettingControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Figlut.Server.Toolkit.Mmc.SettingEditors.EditBoolSettingControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Figlut.Server.Toolkit.Mmc.SettingEditors.EditBoolSettingControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Figlut.Server.Toolkit.Mmc.SettingEditors.EditEnumSettingControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Figlut.Server.Toolkit.Mmc.SettingEditors.EditEnumSettingControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Figlut.Server.Toolkit.Mmc.SettingEditors.EditEnumSettingControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Figlut.Server.Toolkit.Mmc.SettingEditors.EditLongSettingControl.RefreshData(System.Object)">
            <summary>
            Populate control values from the SelectionObject (set in UserListView.SelectionOnChanged) The node is the node being updated.
            This method sets the default values on the controls.
            </summary>
        </member>
        <member name="M:Figlut.Server.Toolkit.Mmc.SettingEditors.EditLongSettingControl.CanApplyChanges">
            <summary>
            Check during UserProptertyPage.OnApply to ensure that changes can be Applied i.e. verify values entered from the user.
            </summary>
            <returns>returns true if changes are valid</returns>
        </member>
        <member name="M:Figlut.Server.Toolkit.Mmc.SettingEditors.EditLongSettingControl.UpdateData(System.Object)">
            <summary>
            Update the node with the controls values.
            </summary>
            <param name="userNode">Node being updated by property page</param>
        </member>
        <member name="M:Figlut.Server.Toolkit.Mmc.SettingEditors.EditLongSettingControl.txtValue_TextChanged(System.Object,System.EventArgs)">
            <summary>
            Notifies/Flags the PropertyPage that info has changed and that the PropertySheet can change the 
            buttons.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:Figlut.Server.Toolkit.Mmc.SettingEditors.EditLongSettingControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Figlut.Server.Toolkit.Mmc.SettingEditors.EditLongSettingControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Figlut.Server.Toolkit.Mmc.SettingEditors.EditLongSettingControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Figlut.Server.Toolkit.Mmc.SettingEditors.EditSettingPage.OnApply">
            <summary>
            Sent to every page in the property sheet to indicate that the user has clicked 
            the Apply button and wants all changes to take effect.
            </summary>
        </member>
        <member name="M:Figlut.Server.Toolkit.Mmc.SettingEditors.EditSettingPage.OnOK">
            <summary>
            Sent to every page in the property sheet to indicate that the user has clicked the OK 
            or Close button and wants all changes to take effect.
            </summary>
        </member>
        <member name="M:Figlut.Server.Toolkit.Mmc.SettingEditors.EditSettingPage.OnCancel">
            <summary>
            Indicates that the user wants to cancel the property sheet.
            Default implementation allows cancel operation.
            </summary>
        </member>
        <member name="M:Figlut.Server.Toolkit.Mmc.SettingEditors.EditSettingPage.OnDestroy">
            <summary>
            Notifies a page that the property sheet is getting destoyed. 
            Use this notification message as an opportunity to perform cleanup operations.
            </summary>
        </member>
        <member name="M:Figlut.Server.Toolkit.Mmc.SettingEditors.EditTextSettingControl.RefreshData(System.Object)">
            <summary>
            Populate control values from the SelectionObject (set in UserListView.SelectionOnChanged). The node is the node being updated.
            This method sets the default values on the controls.
            </summary>
        </member>
        <member name="M:Figlut.Server.Toolkit.Mmc.SettingEditors.EditTextSettingControl.CanApplyChanges">
            <summary>
            Check during UserProptertyPage.OnApply to ensure that changes can be Applied i.e. verify values entered from the user.
            </summary>
            <returns>returns true if changes are valid</returns>
        </member>
        <member name="M:Figlut.Server.Toolkit.Mmc.SettingEditors.EditTextSettingControl.UpdateData(System.Object)">
            <summary>
            Update the node with the controls values.
            </summary>
            <param name="userNode">Node being updated by property page</param>
        </member>
        <member name="M:Figlut.Server.Toolkit.Mmc.SettingEditors.EditTextSettingControl.txtValue_TextChanged(System.Object,System.EventArgs)">
            <summary>
            Notifies/Flags the PropertyPage that info has changed and that the PropertySheet can change the 
            buttons.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:Figlut.Server.Toolkit.Mmc.SettingEditors.EditTextSettingControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Figlut.Server.Toolkit.Mmc.SettingEditors.EditTextSettingControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Figlut.Server.Toolkit.Mmc.SettingEditors.EditTextSettingControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Figlut.Server.Toolkit.Utilities.Cab.CabBuilder.BuildCab(Figlut.Server.Toolkit.Utilities.Cab.CabInfo,System.String,System.String,System.Boolean,System.String@,System.String@)">
            <summary>
            Cab Wizard: http://msdn.microsoft.com/en-us/library/aa924359.aspx
            </summary>
            <param name="cabInfo"></param>
            <param name="outputFilePath"></param>
            <param name="cabWizFilePath"></param>
            <param name="deleteINFAfterBuild"></param>
            <returns>Returns the contents of CabWiz's log file.</returns>
        </member>
        <member name="T:Figlut.Server.Toolkit.Utilities.Cab.CabInfo">
            <summary>
            Contains information about a CAB file in order to create a INF file to be passed to cabwiz to build a cab.
            INF format: http://msdn.microsoft.com/en-us/library/aa924478.aspx
            Creating an INF File: http://msdn.microsoft.com/en-us/library/3h8ff753(v=vs.80).aspx
            </summary>
        </member>
        <member name="M:Figlut.Server.Toolkit.Utilities.Cab.CabInfo.#ctor(System.String,System.String,System.String,System.Nullable{System.Double},System.Nullable{System.Double})">
            <summary>
            Contains information about a CAB file in order to create a INF file to be passed to cabwiz to build a cab.
            </summary>
            <param name="providerName">May not be passed as null or empty.</param>
            <param name="appName">May not be passed as null or empty.</param>
            <param name="manufacturer">May not be passed as null or empty.</param>
            <param name="versionMin">A null defaults the value to 4.0</param>
            <param name="versionMax">A null defaults the value to 6.99</param>
        </member>
        <member name="M:Figlut.Server.Toolkit.Utilities.Cab.CabInfo.#ctor">
            <summary>
            Contains information about a CAB file in order to create a INF file to be passed to cabwiz to build a cab.
            </summary>
        </member>
        <member name="M:Figlut.Server.Toolkit.Utilities.Cab.CabInfo.SetCESetupDll(System.String)">
            <summary>
            Set the file name (not the path) of the CESetupDLL for the CAB file. The resource file must have already been added to this CAB
            and must have a dll file extension.
            </summary>
            <param name="ceSetupDll"></param>
        </member>
        <member name="M:Figlut.Server.Toolkit.Utilities.Cab.CabInfo.ContainsCabResource(System.String)">
            <summary>
            Pass in just the file name (not the path) to determine if the resource 
            file has already been added to be embedded into this CAB file.
            </summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:Figlut.Server.Toolkit.Utilities.Cab.CabInfo.ContainsCabResource(Figlut.Server.Toolkit.Utilities.Cab.CabResourceInfo)">
            <summary>
            Pass in CabResource to determine if the resource file has already been added to be embedded into this CAB file.
            The match is done against the file name (not th path).
            </summary>
            <param name="resource"></param>
            <returns></returns>
        </member>
        <member name="M:Figlut.Server.Toolkit.Utilities.Cab.CabInfo.AddCabResource(System.String)">
            <summary>
            Adds a file as a resource to be embedded in the CAB file. The file name (not the path) has to be unique to this CAB file.
            </summary>
            <param name="resource"></param>
        </member>
        <member name="M:Figlut.Server.Toolkit.Utilities.Cab.CabInfo.RemoveCabResource(Figlut.Server.Toolkit.Utilities.Cab.CabResourceInfo)">
            <summary>
            Removes a resource file from this CAB file.
            </summary>
            <param name="resource"></param>
        </member>
        <member name="M:Figlut.Server.Toolkit.Utilities.Cab.CabInfo.ValidateCabResourcesExist">
            <summary>
            Validates that all the files resources added to the CAB actually exist.
            </summary>
        </member>
        <member name="M:Figlut.Server.Toolkit.Utilities.Cab.CabInfo.AppendINFVersionBlock(System.Text.StringBuilder)">
            <summary>
            INF Order: 1
            </summary>
            <param name="INF"></param>
        </member>
        <member name="M:Figlut.Server.Toolkit.Utilities.Cab.CabInfo.AppendINFCEStringBlock(System.Text.StringBuilder)">
            <summary>
            INF Order: 2
            </summary>
            <param name="INF"></param>
        </member>
        <member name="M:Figlut.Server.Toolkit.Utilities.Cab.CabInfo.AppendINFStringsBlock(System.Text.StringBuilder)">
            <summary>
            INF Order: 3
            </summary>
            <param name="INF"></param>
        </member>
        <member name="M:Figlut.Server.Toolkit.Utilities.Cab.CabInfo.AppendINFCEDeviceBlock(System.Text.StringBuilder)">
            <summary>
            INF Order: 4
            </summary>
            <param name="INF"></param>
        </member>
        <member name="M:Figlut.Server.Toolkit.Utilities.Cab.CabInfo.AppendINFDefaultInstallBlock(System.Text.StringBuilder)">
            <summary>
            INF Order: 5
            </summary>
            <param name="INF"></param>
        </member>
        <member name="M:Figlut.Server.Toolkit.Utilities.Cab.CabInfo.AppendINFSourceDisksNamesBlock(System.Text.StringBuilder)">
            <summary>
            INF Order: 7
            </summary>
            <param name="INF"></param>
        </member>
        <member name="M:Figlut.Server.Toolkit.Utilities.Cab.CabInfo.AppendINFSourceDisksFilesBlock(System.Text.StringBuilder)">
            <summary>
            INF Order: 8
            </summary>
            <param name="INF"></param>
        </member>
        <member name="M:Figlut.Server.Toolkit.Utilities.Cab.CabInfo.AppendINFDestinationDirsBlock(System.Text.StringBuilder)">
            <summary>
            INF Order: 9
            </summary>
            <param name="INF"></param>
        </member>
        <member name="M:Figlut.Server.Toolkit.Utilities.Cab.CabInfo.AppendINFOperationsBlock(System.Text.StringBuilder)">
            <summary>
            INF Order: 10
            </summary>
            <param name="INF"></param>
        </member>
        <member name="M:Figlut.Server.Toolkit.Utilities.Cab.CabInfo.AppendINFShortcuts(System.Text.StringBuilder)">
            <summary>
            INF Order: 11
            </summary>
            <param name="INF"></param>
        </member>
        <member name="M:Figlut.Server.Toolkit.Utilities.Cab.CabInfo.AppendINFRegKeys(System.Text.StringBuilder)">
            <summary>
            INF Order: 12
            </summary>
            <param name="INF"></param>
        </member>
        <member name="P:Figlut.Server.Toolkit.Utilities.Cab.CabInfo.Item(System.String)">
            <summary>
            Get a CAB resource file with the specified file name (not the full path).
            </summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:Figlut.Server.Toolkit.Utilities.Cab.CabResourceInfo.GetINFCopyFileOperationName">
            <summary>
            Gets just the name of the operation in the INF file responsible 
            for copying the file to the correct location on the device.
            e.g. (where 1 is the index of the file)
            
            Files.Common1
            </summary>
            <returns></returns>
        </member>
        <member name="M:Figlut.Server.Toolkit.Utilities.Cab.CabResourceInfo.AppendINFSourceDiskNameBlock(System.Text.StringBuilder)">
            <summary>
            Gets the directory path formatted as needed to be listed the INF file.
            e.g. (where 1 is the index and C:\Program Files\Microsoft.NET\SDK\CompactFramework\v3.5\WindowsCE\ is the directory of the file)
            
            1=,"Common1",,"C:\Program Files\Microsoft.NET\SDK\CompactFramework\v3.5\WindowsCE\"
            </summary>
            <returns></returns>
        </member>
        <member name="M:Figlut.Server.Toolkit.Utilities.Cab.CabResourceInfo.AppendINFSourceDiskFileBlock(System.Text.StringBuilder)">
            <summary>
            Gets the file name formatted as needed to be listed in the INF file.
            e.g. (where 1 is the index and NETCFv35.wm.armv4i.cab is the file name.
            
            "NETCFv35.wm.armv4i.cab"=1
            </summary>
            <returns></returns>
        </member>
        <member name="M:Figlut.Server.Toolkit.Utilities.Cab.CabResourceInfo.AppendINFDestinationDirBlock(System.Text.StringBuilder)">
            <summary>
            Get the INF formatted line indicating the destination directory on the device where
            the file will be copied to.
            e.g. (where 1 is the index)
            
            Files.Common1=0,"%InstallDir%"
            </summary>
            <returns></returns>
        </member>
        <member name="M:Figlut.Server.Toolkit.Utilities.Cab.CabResourceInfo.AppendINFCopyFileOperationBlock(System.Text.StringBuilder)">
            <summary>
            Get the actual operation in the INF file responsible
            for copying the file to the correct location on the device.
            e.g. (where 1 is the index and NETCFv35.wm.armv4i.cab is the file name)
            
            [Files.Common1]
            "NETCFv35.wm.armv4i.cab","NETCFv35.wm.armv4i.cab",,0
            </summary>
            <returns></returns>
        </member>
        <member name="T:Figlut.Server.Toolkit.Utilities.Logging.LogMessage">
            <summary>
            A class to hold some a message and the date/time. To be used when logging.
            </summary>
        </member>
        <member name="P:Figlut.Server.Toolkit.Utilities.Logging.LogMessage.Message">
            <summary>
            The message to log.
            </summary>
        </member>
        <member name="P:Figlut.Server.Toolkit.Utilities.Logging.LogMessage.Date">
            <summary>
            The date/time to record in the log when logging this LogInfo.
            </summary>
        </member>
        <member name="M:Figlut.Server.Toolkit.Utilities.Serialization.XSerializer.SerializeToFile(System.Object,System.String)">
            <summary>
            Serializes an object to an XML file. No extra/derived types will be provided
            to the underlying serializer.
            </summary>
            <param name="obj">The object to serialized.</param>
            <param name="filename">The the file path of the XML file to which object will be serialized to.</param>
        </member>
        <member name="M:Figlut.Server.Toolkit.Utilities.Serialization.XSerializer.SerializeToFile(System.Object,System.Type[],System.String)">
            <summary>
            Serializes an object to an XML file. All derived types should be included in the call
            for serialization to complete succcessfully.
            </summary>
            <param name="obj">The object to serialized.</param>
            <param name="extraTypes">The derived types to be provided to the underlying serializer.</param>
            <param name="filename">The the file path of the XML file to which object will be serialized to.</param>
        </member>
        <member name="T:Figlut.Server.Toolkit.Web.Client.WebServiceClient">
            <summary>
            A wrapper class for performing web requests/calls calls to a service (or any other web resource).
            </summary>
        </member>
        <member name="M:Figlut.Server.Toolkit.Web.Client.WebServiceClient.#ctor">
            <summary>
            A wrapper class for performing web requests/calls calls to a service (or any other web resource).
            </summary>
        </member>
        <member name="M:Figlut.Server.Toolkit.Web.Client.WebServiceClient.#ctor(System.String)">
            <summary>
            A wrapper class for performing web requests/calls calls to a service (or any other web resource).
            </summary>
            <param name="webServiceBaseUrl">The base URL to be used for web requests e.g. http://www.mydomains.com/api</param>
        </member>
        <member name="M:Figlut.Server.Toolkit.Web.Client.WebServiceClient.#ctor(System.String,System.String)">
            <summary>
            A wrapper class for performing web requests/calls calls to a service (or any other web resource).
            </summary>
            <param name="name">The name of the web service to used to identify it in perhaps an entity cache.</param>
            <param name="webServiceBaseUrl">The base URL to be used for web requests e.g. http://www.mydomains.com/api</param>
        </member>
        <member name="M:Figlut.Server.Toolkit.Web.Client.WebServiceClient.ConnectionTest(System.Int32)">
            <summary>
            Performs a GET operation to the server at the base URL to determine if it can reach the server.
            If a WebException is thrown and its status is connection failure or if the inner exception is a socket exception 
            then the exception is thrown i.e. could not connect to server. Otherwise the WebException is swallowed e.g. a 404 
            (page not found) WebException could have be thrown, but it still indicates that the web server is online.
            </summary>
            <param name="timeout">The timeout of the web request</param>
        </member>
        <member name="M:Figlut.Server.Toolkit.Web.Client.WebServiceClient.ConnectionTest(System.String@,System.Int32)">
            <summary>
            Performs a GET operation to the server at the base URL to determine if it can reach the server
            If a WebException is thrown and its status is connection failure or if the inner exception is a socket exception 
            then the exception is thrown i.e. could not connect to server. Otherwise the WebException is swallowed e.g. a 404 
            (page not found) WebException could have be thrown, but it still indicates that the web server is online.
            It also returns the text output from the web request.
            </summary>
            <param name="textOutput">The text output from the web request will be placed in this output parameter.</param>
            <param name="timeout">The timeout of the web request</param>
        </member>
        <member name="M:Figlut.Server.Toolkit.Web.Client.WebServiceClient.ConnectionTest(System.String,System.Int32)">
            <summary>
            Performs a GET operation to the server at the query string appended to the base URL to
            determine if it can reach the server.
            If a WebException is thrown and its status is connection failure or if the inner exception is a socket exception 
            then the exception is thrown i.e. could not connect to server. Otherwise the WebException is swallowed e.g. a 404 
            (page not found) WebException could have be thrown, but it still indicates that the web server is online.
            It also returns the text output from the web request.
            </summary>
            <param name="queryString">The string to append to the base url making up the complete URL where the web request will be made to.</param>
            <param name="timeout">The timeout of the web request</param>
        </member>
        <member name="M:Figlut.Server.Toolkit.Web.Client.WebServiceClient.ConnectionTest(System.String,System.String@,System.Int32)">
            <summary>
            Performs a GET operation to the server at the query string appended to the base URL to
            determine if it can reach the server.
            If a WebException is thrown and its status is connection failure or if the inner exception is a socket exception 
            then the exception is thrown i.e. could not connect to server. Otherwise the WebException is swallowed e.g. a 404 
            (page not found) WebException could have be thrown, but it still indicates that the web server is online.
            </summary>
            <param name="queryString">The string to append to the base url making up the complete URL where the web request will be made to.</param>
            <param name="textOutput">The text output from the web request will be placed in this output parameter.</param>
            <param name="timeout">The timeout of the web request</param>
        </member>
        <member name="M:Figlut.Server.Toolkit.Web.Client.WebServiceClient.CallService(System.String,System.String,Figlut.Server.Toolkit.Web.Client.HttpVerb,System.String,System.Int32,System.String)">
            <summary>
            Performs a web request to a URL made of the query string appended to the base URL
            and applying the given HTTP verb. If requestPostString to be posted is not null 
            it will be included in the web request to the service. It then returns the text it
            receives from the web service.
            </summary>
            <param name="queryString">The string that will be appended to the end of the Web Service Base URL.</param>
            <param name="requestPostString">The text to be posted to the service.</param>
            <param name="verb">The HTTP verb to be applied to the web request.</param>
            <param name="setContentType">Whether the Content Type to the wb request should be set to the next parameter i.e. contentType</param>
            <param name="contentType">The type of content for the web request.</param>
            <param name="timeout">The timeout of the web request</param>
            <returns></returns>
        </member>
        <member name="P:Figlut.Server.Toolkit.Web.Client.WebServiceClient.Name">
            <summary>
            The name of the web service to used to identify it in perhaps an entity cache.
            </summary>
        </member>
        <member name="P:Figlut.Server.Toolkit.Web.Client.WebServiceClient.WebServiceBaseUrl">
            <summary>
            The base URL to be used for web requests e.g. http://www.mydomains.com/api
            </summary>
        </member>
        <member name="T:Figlut.Server.Toolkit.Web.Client.JsonWebServiceClient">
            <summary>
            A wrapper class for performing web service calls to a JSON Rest based web service.
            </summary>
        </member>
        <member name="M:Figlut.Server.Toolkit.Web.Client.JsonWebServiceClient.#ctor">
            <summary>
            A wrapper class for performing web service calls to a JSON Rest based web service.
            </summary>
        </member>
        <member name="M:Figlut.Server.Toolkit.Web.Client.JsonWebServiceClient.#ctor(System.String)">
            <summary>
            A wrapper class for performing web service calls to a JSON Rest based web service.
            </summary>
            <param name="webServiceBaseUrl">The base URL for the REST web service e.g. http://www.mydomains.com/api</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Figlut.Server.Toolkit.Web.Client.JsonWebServiceClient.CallService``1(System.String,System.Object,Figlut.Server.Toolkit.Web.Client.HttpVerb,System.Int32)" -->
        <!-- Badly formed XML comment ignored for member "M:Figlut.Server.Toolkit.Web.Client.JsonWebServiceClient.CallService``1(System.String,System.Object,Figlut.Server.Toolkit.Web.Client.HttpVerb,System.String@,System.Boolean,System.Int32)" -->
        <member name="T:Figlut.Server.Toolkit.Web.MimeContentType">
            <summary>
            MIME Content Types: http://webdesign.about.com/od/multimedia/a/mime-types-by-content-type.htm
            Application Content Types: http://www.iana.org/assignments/media-types/application/index.html
            </summary>
        </member>
        <member name="M:Figlut.Server.Toolkit.Winforms.BorderlessForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="F:Figlut.Server.Toolkit.Winforms.BorderlessForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Figlut.Server.Toolkit.Winforms.BorderlessForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Figlut.Server.Toolkit.Winforms.CustomDataGridView.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Figlut.Server.Toolkit.Winforms.CustomDataGridView.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Figlut.Server.Toolkit.Winforms.CustomDataGridView.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Figlut.Server.Toolkit.Winforms.CustomListBox.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Figlut.Server.Toolkit.Winforms.CustomListBox.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Figlut.Server.Toolkit.Winforms.CustomListBox.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Figlut.Server.Toolkit.Winforms.CustomMainMenu.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Figlut.Server.Toolkit.Winforms.CustomMainMenu.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Figlut.Server.Toolkit.Winforms.CustomMainMenu.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Figlut.Server.Toolkit.Winforms.CustomProgressBar.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Figlut.Server.Toolkit.Winforms.CustomProgressBar.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Figlut.Server.Toolkit.Winforms.CustomProgressBar.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Figlut.Server.Toolkit.Winforms.CustomTab.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Figlut.Server.Toolkit.Winforms.CustomTab.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Figlut.Server.Toolkit.Winforms.CustomTab.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Figlut.Server.Toolkit.Winforms.CustomToolStrip.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Figlut.Server.Toolkit.Winforms.CustomToolStrip.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Figlut.Server.Toolkit.Winforms.CustomToolStrip.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Figlut.Server.Toolkit.Winforms.CustomTreeView.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Figlut.Server.Toolkit.Winforms.CustomTreeView.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Figlut.Server.Toolkit.Winforms.CustomTreeView.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Figlut.Server.Toolkit.Winforms.GradientButton.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Figlut.Server.Toolkit.Winforms.GradientButton.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Figlut.Server.Toolkit.Winforms.GradientButton.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Figlut.Server.Toolkit.GradientLabel.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Figlut.Server.Toolkit.GradientLabel.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Figlut.Server.Toolkit.GradientLabel.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Figlut.Server.Toolkit.Winforms.GradientPanel.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Figlut.Server.Toolkit.Winforms.GradientPanel.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Figlut.Server.Toolkit.Winforms.GradientPanel.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Figlut.Server.Toolkit.Utilities.EnumHelper.GetEnumValues(System.Type)">
            <summary>
            Gets an array of enums from a given enum.
            </summary>
            <param name="enumType">The enum type to check.</param>
            <returns>Returns an array of enums from a given enum.</returns>
        </member>
        <member name="T:Figlut.Server.Toolkit.Utilities.ExceptionHandler">
            <summary>
            A helper class for handling exceptions i.e. logging and displaying them.
            </summary>
        </member>
        <member name="M:Figlut.Server.Toolkit.Utilities.ExceptionHandler.HandleException(System.Exception)">
            <summary>
            Handles an exption by logging and/or displaying it.
            </summary>
            <param name="exception">The exception to handle.</param>
            <param name="log">Whether or not to use the Logger to log the exception to a log file.</param>
            <param name="display">Whether or not to display the exception mesage and its inner exception message if one exists.</param>
        </member>
        <member name="T:Figlut.Server.Toolkit.Utilities.Formula">
            <summary>
            A helper class containing geometry and other maths methods.
            </summary>
        </member>
        <member name="M:Figlut.Server.Toolkit.Utilities.Formula.GetRectangleFromVertices(Figlut.Server.Toolkit.Utilities.Vertex,Figlut.Server.Toolkit.Utilities.Vertex)">
            <summary>
            Creates a rectangle given the top left and bottom right vertices.
            </summary>
            <param name="topLeftVertex">The vertex of the top left hand corner of the rectangle.</param>
            <param name="bottomRightVertex">The vertex of the bottom right hand corner of the rectangle.</param>
            <returns></returns>
        </member>
        <member name="M:Figlut.Server.Toolkit.Utilities.Formula.GetPolygonArea(System.Collections.Generic.List{Figlut.Server.Toolkit.Utilities.Vertex})">
            <summary>
            Calculates the area of any irregular polygon given its vertices.
            http://www.mathopenref.com/coordpolygonarea2.html
            </summary>
            <param name="vertices">The list of vertices of the polygon.</param>
            <returns>Returns the area of the polygon.</returns>
        </member>
        <member name="M:Figlut.Server.Toolkit.Utilities.Formula.GetTriangleArea(Figlut.Server.Toolkit.Utilities.Vertex,Figlut.Server.Toolkit.Utilities.Vertex,Figlut.Server.Toolkit.Utilities.Vertex)">
            <summary>
            Calculates the area of any triangle given it's three vertices.
            http://www.mathopenref.com/coordtrianglearea.html
            </summary>
            <returns>Returns the area of the triangle.</returns>
        </member>
        <member name="M:Figlut.Server.Toolkit.Utilities.Formula.GetRadius(Figlut.Server.Toolkit.Utilities.Vertex,Figlut.Server.Toolkit.Utilities.Vertex)">
            <summary>
            Determines the distance from the center of a circle to the given vertex.
            It basically gets the distance between two points.
            </summary>
            <param name="vertex"></param>
            <param name="centerVertex"></param>
            <returns></returns>
        </member>
        <member name="M:Figlut.Server.Toolkit.Utilities.Formula.IsVertexInsideCircle(Figlut.Server.Toolkit.Utilities.Vertex,Figlut.Server.Toolkit.Utilities.Vertex,System.Int32)">
            <summary>
            Determines if a supplied vertex is located inside this circle.
            </summary>
            <param name="vertex">The vertex to test for e.g. where the user clicked on the Image Map control.</param>
            <param name="centerVertex">The vertex marking the center of the circle.</param>
            <param name="circleRadius">The radius of the circle.</param>
            <returns>Returns true if the vertex is located inside circle.</returns>
        </member>
        <member name="M:Figlut.Server.Toolkit.Utilities.Formula.IsVertexInsideNonConvexPolygon(Figlut.Server.Toolkit.Utilities.Vertex,System.Collections.Generic.List{Figlut.Server.Toolkit.Utilities.Vertex})">
            <summary>
            Determines whether a given vertex is inside a convex polygon made up of the provided vertices.
            http://www.mathopenref.com/polygonconvex.html
            This method is not accurate for concave polygons.
            </summary>
            <param name="vertex">The vertex to test for e.g. where the user clicked on the Image Map control.</param>
            <param name="polygonVertices">The vertices of the making up the polygon.</param>
            <returns>Returns true if the vertix is inside the polygon.</returns>
        </member>
        <member name="M:Figlut.Server.Toolkit.Utilities.Formula.IsVertexInsideConcavePolygon(Figlut.Server.Toolkit.Utilities.Vertex,System.Collections.Generic.List{Figlut.Server.Toolkit.Utilities.Vertex})">
            <summary>
            Determines whether a given vertex is inside a concave polygon made up of the provided vertices.
            http://alienryderflex.com/polygon/
            http://www.mathopenref.com/polygonconcave.html
            </summary>
            <param name="vertex">The vertex to test for e.g. where the user clicked on the Image Map control.</param>
            <param name="polygonVertices">The vertices of the making up the polygon.</param>
            <returns>Returns true if the vertix is inside the polygon.</returns>
        </member>
        <member name="M:Figlut.Server.Toolkit.Utilities.Formula.IsVertexInsideRectangle(Figlut.Server.Toolkit.Utilities.Vertex,System.Drawing.Rectangle)">
            <summary>
            Determines whether a given vertex is inside given a rectangle.
            </summary>
            <param name="vertex">The vertex to test for e.g. where the user clicked on the Image Map control.</param>
            <param name="rectangle">The rectangle to check against i.e. if the vertex is located inside of it.</param>
            <returns>Returns true if the vertex is inside the rectangle.</returns>
        </member>
        <member name="T:Figlut.Server.Toolkit.Utilities.Information">
            <summary>
            A helper class helps in retrieving system information.
            </summary>
        </member>
        <member name="M:Figlut.Server.Toolkit.Utilities.Information.GetExecutingDirectory">
            <summary>
            Gets the executing directory of the current application.
            </summary>
        </member>
        <member name="M:Figlut.Server.Toolkit.Utilities.Information.GetSystemColors">
            <summary>
            Returns a dictionary of all the system colors with their names as the keys
            to the dictionary.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Figlut.Server.Toolkit.Utilities.Logging.LogError">
            <summary>
            A class to hold an exception and the date/time it occured. To be used when logging.
            </summary>
        </member>
        <member name="T:Figlut.Server.Toolkit.Utilities.Logging.Logger">
            <summary>
            A helper class that can be used to messages to a
            log file and Windows EventLog that will be written in the assembly's executing directory.
            </summary>
        </member>
        <member name="F:Figlut.Server.Toolkit.Utilities.Logging.Logger.DEFAULT_LOG_FILE_NAME">
            <summary>
            The log file name where all errors and info etc. will be logged to in the same
            directory as the executing assembly.
            </summary>
        </member>
        <member name="T:Figlut.Server.Toolkit.Utilities.UIHelper">
            <summary>
            A helper class for displaying message boxes.
            </summary>
        </member>
        <member name="M:Figlut.Server.Toolkit.Utilities.UIHelper.DisplayException(System.Exception)">
            <summary>
            Displays a message box containing the message of the provided Exception
            as well as the message of the inner exception if it exists.
            </summary>
            <param name="ex">The exception whose message will be displayed.</param>
        </member>
        <member name="M:Figlut.Server.Toolkit.Utilities.UIHelper.DisplayError(System.String)">
            <summary>
            Displays an error message box with the given error message.
            </summary>
            <param name="errorMessage">The error message to be displayed.</param>
        </member>
        <member name="M:Figlut.Server.Toolkit.Utilities.UIHelper.DisplayInformation(System.String)">
            <summary>
            Displays an information message box with the given info message.
            </summary>
            <param name="infoMessage">The information message to be displayed.</param>
        </member>
        <member name="M:Figlut.Server.Toolkit.Utilities.UIHelper.DisplayWarning(System.String)">
            <summary>
            Displays a warning message box with the given warning message.
            </summary>
            <param name="warningMessage">The warning message to be displayed.</param>
        </member>
        <member name="M:Figlut.Server.Toolkit.Utilities.UIHelper.AskQuestion(System.String)">
            <summary>
            Displays question message box containing the question message and then
            returns a Dialog result of either Yes or No based on the user's selection/response.
            </summary>
            <param name="question">The question message to be displayed to the user.</param>
            <returns>Returns either a Yes or No response based on the user's selection/response.</returns>
        </member>
        <member name="M:Figlut.Server.Toolkit.Utilities.UIHelper.GetSelectedGridRowCellValue``1(System.Windows.Forms.DataGrid,System.Int32)">
            <summary>
            Gets the cell value of a specific column in the currently selected row of a DataGrid.
            </summary>
            <param name="grid"></param>
            <returns></returns>
        </member>
        <member name="M:Figlut.Server.Toolkit.Utilities.UIHelper.GetSelectedDataGridViewRowCellValue``1(System.Windows.Forms.DataGridView,System.Int32)">
            <summary>
            Gets the cell value of a specific column in the currently selected row of a DataGrid.
            </summary>
            <param name="grid"></param>
            <returns></returns>
        </member>
        <member name="T:Figlut.Server.Toolkit.Utilities.Vertex">
            <summary>
            A helper class containing an X and Y co-ordinate. This class can used
            instead of a .NET Point if one wants to ensure that a set of 
            co-ordinates will be serialized/deserialized successfully.
            </summary>
        </member>
        <member name="M:Figlut.Server.Toolkit.Utilities.Vertex.ToPoint">
            <summary>
            Creates a .NET Point object based on this Vertex's
            X and Y co-ordinates.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Figlut.Server.Toolkit.Utilities.Vertex.X">
            <summary>
            The X co-ordinate of the Vertex.
            </summary>
        </member>
        <member name="P:Figlut.Server.Toolkit.Utilities.Vertex.Y">
            <summary>
            The Y co-ordinate of the Vertex.
            </summary>
        </member>
        <member name="T:Figlut.Server.Toolkit.Utilities.WaitProcess">
            <summary>
            A helper class for displaying a wait cursor.
            On this creation of an object of this WaiCursor class the current cursor will be set to a wait cursor.
            On calling Dispose on this object, the current cursor will set back to its default.
            This class should be used in a using clause e.g.
            
            using(WaitCursor w = new WaitCursor())
            {
                //Some code that will take some time to execute.
            }
            </summary>
        </member>
        <member name="M:Figlut.Server.Toolkit.Utilities.WaitProcess.#ctor">
            <summary>
            A helper class for displaying a wait cursor.
            On this calling this constructor the current cursor will be set to a wait cursor.
            On calling Dispose on this object, the current cursor will set back to its default.
            </summary>
        </member>
        <member name="M:Figlut.Server.Toolkit.Utilities.WaitProcess.Dispose">
            <summary>
            The current cursor will set back to a default cursor.
            </summary>
        </member>
        <member name="T:Figlut.Server.Toolkit.Web.Client.HttpVerb">
            <summary>
            The method/verb of the web request made to the web service.
            Normally corresponds to typical CRUD (Create/Read/Update/Delete) operations
            although you should not assume that it directly corresponds to SQL operations i.e. 
            it depends on how the web service was implementated to interpret the verb.
            </summary>
        </member>
        <member name="F:Figlut.Server.Toolkit.Web.Client.HttpVerb.GET">
            <summary>
            A get request. Normally used to query data through the web service.
            </summary>
        </member>
        <member name="F:Figlut.Server.Toolkit.Web.Client.HttpVerb.POST">
            <summary>
            A post request. Normally used the update data through the web service.
            However, PUT and POST are normally interchangeable depending on the
            web service implementation.
            </summary>
        </member>
        <member name="F:Figlut.Server.Toolkit.Web.Client.HttpVerb.PUT">
            <summary>
            A put request. Normally used to update data through the web service.
            However, PUT and POST are normally interchangeable depending on the
            web service implementation.
            </summary>
        </member>
        <member name="F:Figlut.Server.Toolkit.Web.Client.HttpVerb.DELETE">
            <summary>
            A delete request. Normally used to create data through the web service.
            </summary>
        </member>
        <member name="F:Figlut.Server.Toolkit.Web.Client.HttpVerb.HEAD">
            <summary>
            A head request.
            </summary>
        </member>
        <member name="F:Figlut.Server.Toolkit.Web.Client.HttpVerb.OPTIONS">
            <summary>
            An options request.
            </summary>
        </member>
    </members>
</doc>
